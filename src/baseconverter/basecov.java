package baseconverter;
import com.formdev.flatlaf.FlatIntelliJLaf;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author mazsa
 */
public class basecov extends javax.swing.JFrame {

    /**
     * Creates new form basecov
     */
    public basecov() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        srcbase = new javax.swing.JTextField();
        btncalc = new javax.swing.JButton();
        destbase = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        inputnumber = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        baseCalc = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        bCalc = new javax.swing.JTextField();
        aCalc = new javax.swing.JTextField();
        Calc = new javax.swing.JButton();
        sumRes = new javax.swing.JLabel();
        subRes = new javax.swing.JLabel();
        multRes = new javax.swing.JLabel();
        divRes = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Input Number");

        btncalc.setText("Calculate");
        btncalc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncalcActionPerformed(evt);
            }
        });

        jLabel3.setText("Destination Base");

        inputnumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputnumberActionPerformed(evt);
            }
        });

        jLabel1.setText("Source Base");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(156, 156, 156)
                .addComponent(btncalc)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 92, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(destbase, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(inputnumber, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(srcbase, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(87, 87, 87))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(srcbase, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(inputnumber, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(destbase, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btncalc)
                .addContainerGap(98, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Base Converter", jPanel1);

        jLabel4.setText("Enter Base");

        jLabel5.setText("Enter 1st number");

        jLabel6.setText("Enter 2nd number");

        Calc.setText("Calculate");
        Calc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CalcActionPerformed(evt);
            }
        });

        sumRes.setText("Sum:");

        subRes.setText("Difference:");

        multRes.setText("Product:");

        divRes.setText("Quotient:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(aCalc, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 119, Short.MAX_VALUE)
                        .addComponent(Calc))
                    .addComponent(sumRes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bCalc, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(baseCalc, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(subRes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(multRes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(divRes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(37, 37, 37))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(baseCalc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Calc, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aCalc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bCalc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(sumRes, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(subRes, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(multRes, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(divRes, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Calculator", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void inputnumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputnumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputnumberActionPerformed

    private void btncalcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncalcActionPerformed
        // TODO add your handling code here:
        String num = inputnumber.getText();
        int source = Integer.parseInt(srcbase.getText());
        int destination = Integer.parseInt(destbase.getText());
        String result = Integer.toString(Integer.parseInt(num, source), destination);
        JOptionPane.showMessageDialog(this, "Result is "+ result);
    }//GEN-LAST:event_btncalcActionPerformed

    private void CalcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CalcActionPerformed
        // TODO add your handling code here:
       Thread sum = new Thread() {
           @Override
           public void run() {
//               try {
//                   Thread.sleep(2000);
//               } catch (InterruptedException ex) {
//                   Logger.getLogger(basecov.class.getName()).log(Level.SEVERE, null, ex);
//               }
               sumRes.setText("Sum:     " + add(Integer.parseInt(baseCalc.getText()), aCalc.getText(), bCalc.getText()));
           }
       };
       Thread sub = new Thread() {
           @Override
           public void run() {
               subRes.setText("Difference:     " + sub(baseCalc.getText(), aCalc.getText(), bCalc.getText()));  
           }
       };
        Thread mult = new Thread() {
           @Override
           public void run() {
                multRes.setText("Product:     " + mult(baseCalc.getText(), aCalc.getText(), bCalc.getText()));
           }
       };
        Thread div = new Thread() {
           @Override
           public void run() {
               divRes.setText("Quotient:     " + div(baseCalc.getText(), aCalc.getText(), bCalc.getText()));
           }
       };
       sum.start();
       sub.start();
       mult.start();
       div.start();
    }//GEN-LAST:event_CalcActionPerformed
    
    public static String sub(String base, String a, String b) {
        int x = Integer.parseInt(Integer.toString(Integer.parseInt(a, Integer.parseInt(base)), 10));
        int y = Integer.parseInt(Integer.toString(Integer.parseInt(b, Integer.parseInt(base)), 10));
        int z = x - y;
        return Integer.toString(z, Integer.parseInt(base));
    }

    public static String mult(String base, String a, String b) {
        int x = Integer.parseInt(Integer.toString(Integer.parseInt(a, Integer.parseInt(base)), 10));
        int y = Integer.parseInt(Integer.toString(Integer.parseInt(b, Integer.parseInt(base)), 10));
        int z = x * y;
        return Integer.toString(z, Integer.parseInt(base));
    }
    
    public static String div(String base, String a, String b) {
        int x = Integer.parseInt(Integer.toString(Integer.parseInt(a, Integer.parseInt(base)), 10));
        int y = Integer.parseInt(Integer.toString(Integer.parseInt(b, Integer.parseInt(base)), 10));
        int z = x / y;
        return Integer.toString(z, Integer.parseInt(base));
    }
    
    public static String add(int base, String a, String b){
      String answer = "";
      int carry = 0, j = 0, k = 0;
      int[] added = new int[101];
      char[] array = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F' };

      for(int i = 0; i < 101; i++){
         added[i] = -1;
      }

      j = a.length()-1;
      for(int i = 100; j >= 0; i--){
         if(added[i] == -1) added[i] = 0;
      
         if (a.charAt(j) == '0'){
            added[i] += 0;
         } else if(a.charAt(j) == '1'){
            added[i] += 1;
         } else if(a.charAt(j) == '2'){
            added[i] += 2;
         } else if(a.charAt(j) == '3'){
            added[i] += 3;
         } else if(a.charAt(j) == '4'){
            added[i] += 4;
         } else if(a.charAt(j) == '5'){
            added[i] += 5;
         } else if(a.charAt(j) == '6'){
            added[i] += 6;
         } else if(a.charAt(j) == '7'){
            added[i] += 7;
         } else if(a.charAt(j) == '8'){
            added[i] += 8;
         } else if(a.charAt(j) == '9'){
            added[i] += 9;
         } else if(a.charAt(j) == 'A'){
            added[i] += 10;
         } else if(a.charAt(j) == 'B'){
            added[i] += 11;
         } else if(a.charAt(j) == 'C'){
            added[i] += 12;
         } else if(a.charAt(j) == 'D'){
            added[i] += 13;
         } else if(a.charAt(j) == 'E'){
            added[i] += 14;
         } else if(a.charAt(j) == 'F'){
            added[i] += 15;
         }
         if(added[i] >= base){
            added[i] -= base;
            carry = 1;
            k = 1;
            while(carry == 1){
               if(added[i-k] == -1) added[i-k] = 0;
               if(added[i-k]+1 >= base){
                  added[i-k] -= base-1;
                  k++;
               } else {
                  added[i-k] += 1;
                  carry = 0;
               }
            }
         }
         j--;
      }
      
      //System.out.println(Arrays.toString(added));
      carry = 0;

      j = b.length()-1;
      for(int i = 100; j >= 0; i--){
         if(added[i] == -1) added[i] = 0;
      
         if (b.charAt(j) == '0'){
            added[i] += 0;
         } else if(b.charAt(j) == '1'){
            added[i] += 1;
         } else if(b.charAt(j) == '2'){
            added[i] += 2;
         } else if(b.charAt(j) == '3'){
            added[i] += 3;
         } else if(b.charAt(j) == '4'){
            added[i] += 4;
         } else if(b.charAt(j) == '5'){
            added[i] += 5;
         } else if(b.charAt(j) == '6'){
            added[i] += 6;
         } else if(b.charAt(j) == '7'){
            added[i] += 7;
         } else if(b.charAt(j) == '8'){
            added[i] += 8;
         } else if(b.charAt(j) == '9'){
            added[i] += 9;
         } else if(b.charAt(j) == 'A'){
            added[i] += 10;
         } else if(b.charAt(j) == 'B'){
            added[i] += 11;
         } else if(b.charAt(j) == 'C'){
            added[i] += 12;
         } else if(b.charAt(j) == 'D'){
            added[i] += 13;
         } else if(b.charAt(j) == 'E'){
            added[i] += 14;
         } else if(b.charAt(j) == 'F'){
            added[i] += 15;
         }
         if(added[i] >= base){
            added[i] -= base;
            carry = 1;
            k = 1;
            while(carry == 1){
               if(added[i-k] == -1) added[i-k] = 0;
               if(added[i-k]+1 >= base){
                  added[i-k] -= base-1;
                  k++;
               } else {
                  added[i-k] += 1;
                  carry = 0;
               }
            }
         }
         //System.out.println("Adding " + b.charAt(j) + " at position " + j);
         j--;
      }
      //System.out.println(Arrays.toString(added));
      //put the numbers into the return string
      for (int i = 0; i < 101; i++) {
         if(added[i] != -1) answer += array[added[i]];
         //System.out.println(i);
      }
      //System.out.println(Arrays.toString(added));
      return answer;
   }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(basecov.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(basecov.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(basecov.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(basecov.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        //</editor-fold>
            try {
                UIManager.setLookAndFeel(new FlatIntelliJLaf());
            } catch (UnsupportedLookAndFeelException e) {
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new basecov().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Calc;
    private javax.swing.JTextField aCalc;
    private javax.swing.JTextField bCalc;
    private javax.swing.JTextField baseCalc;
    private javax.swing.JButton btncalc;
    private javax.swing.JTextField destbase;
    private javax.swing.JLabel divRes;
    private javax.swing.JTextField inputnumber;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel multRes;
    private javax.swing.JTextField srcbase;
    private javax.swing.JLabel subRes;
    private javax.swing.JLabel sumRes;
    // End of variables declaration//GEN-END:variables
}
